#compdef nay

_nay() {
  local context curcontext="$curcontext" state line
  typeset -A opt_args

  local ret=1

  _arguments -C \
    '1: :_nay_cmds' \
    '*::arg:->args' \
  && ret=0

  case $state in
    (args)
      curcontext="${curcontext%:*:*}:nay-cmd-$words[1]:"
      case $line[1] in
        (add)
          _arguments \
            '1:: :_nay_apps' \
            '2:: :_files' \
          && ret=0
        ;;
        (sync|pull_force|pkg|nonpkg|bootstrap|full_sync)
          _arguments \
            '1:: :_nay_apps' \
          && ret=0
        ;;
        *)
          _call_function ret _nay_cmd_$words[1] && ret=0
          (( ret )) && _message 'no more arguments'
        ;;
      esac
    ;;
  esac
}

(( $+functions[_nay_cmds] )) ||
_nay_cmds() {
  local commands; commands=(
    # {classpath,cp}':Disnay the computed classpath'
    'init:Create an empty setup'
    'add:Add a directory/file to the setup setup'
    'sync:Syncs the config files'
    'pull_force:Pull the config from remote and REPLACES the local one'
    'pkg:Installs all the packages that can be installed with yay'
    'nonpkg:Installs all the packages that can not be instaled with yay'
    'bootstrap:Sets up the configs files and software'
    'ssh:Sets all the git origins to use ssh'
    'full_sync:Executes pkg, nonpkg and sync'
  )
  _describe -t commands 'nay! command' commands "$@"
}

(( $+functions[_nay_apps] )) ||
_nay_apps() {
  local commands; commands=(
    `ls $HOME/.local/share/nay/repos`
  )
  _describe -t commands 'nay! command' commands "$@"
}

_nay "$@"
